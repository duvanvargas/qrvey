{"version":3,"sources":["./src/app/core/pipes/filter-name-country.pipe.ts","./src/app/modules/countries/components/qrvey-country-list/qrvey-country-list.component.ts","./src/app/modules/countries/components/qrvey-country-list/qrvey-country-list.component.html","./src/app/core/state/countries/services/country.service.ts","./src/app/core/pipes/filter-region-country.pipe.ts","./src/app/core/state/countries/countries.selectors.ts","./src/environments/environment.ts","./src/app/modules/countries/components/qrvey-country-item/qrvey-country-item.component.html","./src/app/modules/countries/components/qrvey-country-item/qrvey-country-item.component.ts","./src/app/core/state/countries/countries.actions.ts","./src/app/core/state/countries/countries.reducer.ts","./src/app/core/state/countries/countries.effects.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/modules/countries/components/qrvey-search/qrvey-search.component.ts","./src/app/modules/countries/components/qrvey-search/qrvey-search.component.html","./src/app/app.module.ts","./src/app/modules/countries/core/qrvey-home/qrvey-home.component.ts","./src/app/modules/countries/core/qrvey-home/qrvey-home.component.html","./src/app/modules/countries/components/qrvey-search-bar/qrvey-search-bar.component.ts","./src/app/modules/countries/components/qrvey-search-bar/qrvey-search-bar.component.html","./src/app/modules/countries/countries.module.ts","./src/app/modules/countries/components/qrvey-country-modal/qrvey-country-modal.component.ts","./src/app/modules/countries/components/qrvey-country-modal/qrvey-country-modal.component.html","./src/app/modules/countries/countries-routing.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterNameCountry',\n})\nexport class FilterNameCountryPipe implements PipeTransform {\n  transform(countries: any, term: string): any {\n    //check if the search term is defined\n    if (!countries || !term) return countries;\n\n    //return updated countries array\n    return countries.filter(function (country) {\n      return country.name.toLowerCase().includes(term.toLowerCase());\n    });\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { loadCountries } from 'src/app/core/state/countries/countries.actions';\nimport {\n  getAllCountries,\n  filterRegion,\n  searchTerm,\n} from 'src/app/core/state/countries/countries.selectors';\nimport { Country } from 'src/app/core/state/countries/interfaces/country';\n\n@Component({\n  selector: 'app-qrvey-country-list',\n  templateUrl: './qrvey-country-list.component.html',\n  styleUrls: ['./qrvey-country-list.component.scss'],\n})\nexport class QrveyCountryListComponent implements OnInit {\n  countries$: Observable<Country[]>;\n  searchTerm: string;\n  openModal: boolean = false;\n  selectedItem: Country;\n  filterRegion: string;\n  continents = ['Africa', 'America', 'Asia', 'Europe', 'Oceania'];\n\n  constructor(private store: Store<{ countries: Country[] }>) {}\n\n  ngOnInit(): void {\n    this.store.dispatch(loadCountries());\n    this.countries$ = this.store.select(getAllCountries);\n    //\n    this.store.select(searchTerm).subscribe((item) => {\n      this.searchTerm = item;\n    });\n    this.store.select(filterRegion).subscribe((item) => {\n      this.filterRegion = item;\n    });\n  }\n\n  selectItem(item) {\n    this.openModal = true;\n    this.selectedItem = item;\n  }\n\n  closeModalOpen() {\n    this.openModal = false;\n  }\n}\n","<div class=\"list\" *ngIf=\"(countries$ | async).length > 0\">\n  <div *ngFor=\"let item of continents\">\n    <div class=\"region\" *ngIf=\"filterRegion === 'All' || filterRegion === item\">\n      <p class=\"region_title\">{{ item }}</p>\n      <div\n        *ngFor=\"\n          let item of countries$\n            | async\n            | filterRegionCountry: item\n            | filterNameCountry: searchTerm\n        \"\n      >\n        <app-qrvey-country-item\n          [item]=\"item\"\n          (click)=\"selectItem(item)\"\n        ></app-qrvey-country-item>\n      </div>\n    </div>\n  </div>\n  <div class=\"region\" *ngIf=\"filterRegion === 'Favorites'\">\n    <p class=\"region_title\">Favorites</p>\n    <div\n      *ngFor=\"\n        let item of countries$\n          | async\n          | filterRegionCountry: item\n          | filterNameCountry: searchTerm\n      \"\n    >\n      <app-qrvey-country-item\n        *ngIf=\"item.favorite\"\n        [item]=\"item\"\n        (click)=\"selectItem(item)\"\n      ></app-qrvey-country-item>\n    </div>\n  </div>\n</div>\n<app-qrvey-country-modal\n  *ngIf=\"openModal\"\n  id=\"modal\"\n  [item]=\"selectedItem\"\n  (closeModal)=\"closeModalOpen($event)\"\n></app-qrvey-country-modal>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Country } from '../interfaces/country';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CountryService {\n  http: HttpClient;\n\n  constructor(http: HttpClient) {\n    this.http = http;\n  }\n\n  getAllCountries(): Observable<Country[]> {\n    return this.http.get<Country[]>('https://restcountries.eu/rest/v2/all');\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterRegionCountry',\n})\nexport class FilterRegionCountryPipe implements PipeTransform {\n  transform(countries: any, term: string): any {\n    //check if the search term is defined\n    if (!countries || !term) return countries;\n\n    //return updated countries array\n    return countries.filter(function (country) {\n      return country.region.toLowerCase().includes(term.toLowerCase());\n    });\n  }\n}\n","import { CountryState } from './countries.reducer';\r\nimport { createSelector, createFeatureSelector } from '@ngrx/store';\r\nimport { selectAll } from './countries.reducer';\r\n\r\nexport const countryFeatureSelector = createFeatureSelector<CountryState>(\r\n  'countries'\r\n);\r\n\r\nexport const getAllCountries = createSelector(\r\n  countryFeatureSelector,\r\n  selectAll\r\n);\r\n\r\nexport const arecountriesLoaded = createSelector(\r\n  countryFeatureSelector,\r\n  (state) => state.countriesLoaded\r\n);\r\n\r\nexport const searchTerm = createSelector(\r\n  countryFeatureSelector,\r\n  (state) => state.searchTerm\r\n);\r\n\r\nexport const filterRegion = createSelector(\r\n  countryFeatureSelector,\r\n  (state) => state.filterRegion\r\n);\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"country-item\">\n  <img [src]=\"item.flag\" alt=\"flag\" />\n  {{ item.name }}\n  <img *ngIf=\"!item.favorite\" class=\"star\" src=\"assets/star.svg\" />\n  <img *ngIf=\"item.favorite\" class=\"star\" src=\"assets/star-fill.svg\" />\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Country } from 'src/app/core/state/countries/interfaces/country';\n\n@Component({\n  selector: 'app-qrvey-country-item',\n  templateUrl: './qrvey-country-item.component.html',\n  styleUrls: ['./qrvey-country-item.component.scss'],\n})\nexport class QrveyCountryItemComponent implements OnInit {\n  @Input() item: Country;\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { createAction, props } from '@ngrx/store';\r\nimport { Country } from './interfaces/country';\r\n\r\nexport const loadCountries = createAction(\r\n  '[Countries component] Load Countries'\r\n);\r\nexport const loadCountriesSuccess = createAction(\r\n  '[Countries component] Load Countries Success',\r\n  props<{ countries: Country[] }>()\r\n);\r\nexport const loadCountriesFail = createAction(\r\n  '[Countries component] Load Countries Fail'\r\n);\r\nexport const searchTermCountry = createAction(\r\n  '[Countries component] searchTermCountry',\r\n  props<{ searchTerm: string }>()\r\n);\r\nexport const filterRegionCountry = createAction(\r\n  '[Countries component] filterRegionCountry',\r\n  props<{ filterRegion: string }>()\r\n);\r\nexport const addFavorite = createAction(\r\n  '[Countries component] addFavorite',\r\n  props<{ idCountry: string }>()\r\n);\r\nexport const removeFavorite = createAction(\r\n  '[Countries component] removeFavorite',\r\n  props<{ idCountry: string }>()\r\n);\r\n","import { createReducer, on, Action } from '@ngrx/store';\r\nimport { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\nimport {\r\n  loadCountries,\r\n  loadCountriesSuccess,\r\n  loadCountriesFail,\r\n  filterRegionCountry,\r\n  searchTermCountry,\r\n  addFavorite,\r\n  removeFavorite,\r\n} from './countries.actions';\r\nimport { Country } from './interfaces/country';\r\nimport { searchTerm } from './countries.selectors';\r\n\r\nexport interface CountryState extends EntityState<Country> {\r\n  countriesLoaded: boolean;\r\n  searchTerm: string;\r\n  filterRegion: string;\r\n}\r\n\r\nexport const adapter: EntityAdapter<Country> = createEntityAdapter<Country>({\r\n  selectId: (Country) => Country.alpha2Code,\r\n});\r\n\r\nexport const initialState = adapter.getInitialState({\r\n  countriesLoaded: false,\r\n  searchTerm: '',\r\n  filterRegion: 'All',\r\n});\r\n\r\nconst _countryReducer = createReducer(\r\n  initialState,\r\n  on(loadCountries, (state) => ({ ...initialState })),\r\n  on(loadCountriesSuccess, (state, action) => {\r\n    return adapter.setAll(action.countries, {\r\n      ...state,\r\n      countriesLoaded: true,\r\n    });\r\n  }),\r\n  on(loadCountriesFail, (state) => ({ ...initialState })),\r\n  on(searchTermCountry, (state, action) => {\r\n    return adapter.addMany([], {\r\n      ...state,\r\n      searchTerm: action.searchTerm,\r\n    });\r\n  }),\r\n  on(addFavorite, (state, action) => {\r\n    return adapter.updateOne(\r\n      {\r\n        id: action.idCountry,\r\n        changes: {\r\n          favorite: true,\r\n        },\r\n      },\r\n      state\r\n    );\r\n  }),\r\n  on(removeFavorite, (state, action) => {\r\n    return adapter.updateOne(\r\n      {\r\n        id: action.idCountry,\r\n        changes: {\r\n          favorite: false,\r\n        },\r\n      },\r\n      state\r\n    );\r\n  }),\r\n  on(filterRegionCountry, (state, action) => ({\r\n    ...state,\r\n    filterRegion: action.filterRegion,\r\n  }))\r\n);\r\n\r\nexport function countryReducer(\r\n  state: CountryState | undefined,\r\n  action: Action\r\n) {\r\n  return _countryReducer(state, action);\r\n}\r\n\r\nexport const { selectAll, selectIds } = adapter.getSelectors();\r\n","import { loadCountries, loadCountriesSuccess } from './countries.actions';\r\nimport { createEffect, Actions, ofType } from '@ngrx/effects';\r\nimport { concatMap, map } from 'rxjs/operators';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CountryService } from './services/country.service';\r\n\r\n@Injectable()\r\nexport class CountriesEffects {\r\n  loadCountries$ = createEffect(() =>\r\n    this.actions$.pipe(\r\n      ofType(loadCountries),\r\n      concatMap(() => this.countryService.getAllCountries()),\r\n      map((countries) => loadCountriesSuccess({ countries }))\r\n    )\r\n  );\r\n\r\n  constructor(\r\n    private countryService: CountryService,\r\n    private actions$: Actions,\r\n    private router: Router\r\n  ) {}\r\n}\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'qrvey';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, Output } from '@angular/core';\nimport * as EventEmitter from 'events';\n\n@Component({\n  selector: 'app-qrvey-search',\n  templateUrl: './qrvey-search.component.html',\n  styleUrls: ['./qrvey-search.component.scss'],\n})\nexport class QrveySearchComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<div class=\"search\">\n  <div>\n    <h1>\n      Find any <span>country</span><br />\n      in the world.\n    </h1>\n    <app-qrvey-search-bar></app-qrvey-search-bar>\n  </div>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CountriesModule } from './modules/countries/countries.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { StoreModule } from '@ngrx/store';\nimport { countryReducer } from './core/state/countries/countries.reducer';\nimport { CountriesEffects } from './core/state/countries/countries.effects';\nimport { FormsModule } from '@angular/forms';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { CountryService } from './core/state/countries/services/country.service';\nimport { EffectsModule } from '@ngrx/effects';\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    FormsModule,\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    CountriesModule,\n    StoreModule.forRoot({ countries: countryReducer }),\n    EffectsModule.forRoot([CountriesEffects]),\n    StoreDevtoolsModule.instrument({\n      maxAge: 100,\n    }),\n  ],\n  providers: [CountryService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-qrvey-home',\n  templateUrl: './qrvey-home.component.html',\n  styleUrls: ['./qrvey-home.component.scss'],\n})\nexport class QrveyHomeComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<app-qrvey-search></app-qrvey-search>\n<app-qrvey-country-list></app-qrvey-country-list>\n","import { Component, OnInit } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { Country } from 'src/app/core/state/countries/interfaces/country';\nimport {\n  searchTermCountry,\n  filterRegionCountry,\n} from 'src/app/core/state/countries/countries.actions';\n\n@Component({\n  selector: 'app-qrvey-search-bar',\n  templateUrl: './qrvey-search-bar.component.html',\n  styleUrls: ['./qrvey-search-bar.component.scss'],\n})\nexport class QrveySearchBarComponent implements OnInit {\n  country = '';\n  region = 'All';\n  constructor(private store: Store<{ countries: Country[] }>) {}\n\n  ngOnInit(): void {}\n\n  find(): void {\n    this.store.dispatch(searchTermCountry({ searchTerm: this.country }));\n    this.store.dispatch(filterRegionCountry({ filterRegion: this.region }));\n  }\n}\n","<div class=\"search-bar\">\n  <input placeholder=\"Search country\" [(ngModel)]=\"country\" />\n  <select [(ngModel)]=\"region\">\n    <option value=\"All\">Show all</option>\n    <option value=\"Africa\">Africa</option>\n    <option value=\"America\">America</option>\n    <option value=\"Asia\">Asia</option>\n    <option value=\"Europe\">Europe</option>\n    <option value=\"Oceania\">Oceania</option>\n    <option value=\"Favorites\">Favorites</option>\n  </select>\n  <button (click)=\"find()\"></button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CountriesRoutingModule } from './countries-routing.module';\nimport { QrveySearchComponent } from './components/qrvey-search/qrvey-search.component';\nimport { QrveyHomeComponent } from './core/qrvey-home/qrvey-home.component';\nimport { QrveyCountryListComponent } from './components/qrvey-country-list/qrvey-country-list.component';\nimport { QrveySearchBarComponent } from './components/qrvey-search-bar/qrvey-search-bar.component';\nimport { FilterNameCountryPipe } from 'src/app/core/pipes/filter-name-country.pipe';\nimport { FilterRegionCountryPipe } from 'src/app/core/pipes/filter-region-country.pipe';\nimport { FormsModule } from '@angular/forms';\nimport { QrveyCountryItemComponent } from './components/qrvey-country-item/qrvey-country-item.component';\nimport { QrveyCountryModalComponent } from './components/qrvey-country-modal/qrvey-country-modal.component';\n\n@NgModule({\n  declarations: [\n    QrveySearchComponent,\n    QrveyHomeComponent,\n    QrveyCountryListComponent,\n    QrveySearchBarComponent,\n    FilterNameCountryPipe,\n    FilterRegionCountryPipe,\n    QrveyCountryItemComponent,\n    QrveyCountryModalComponent,\n  ],\n  imports: [CommonModule, CountriesRoutingModule, FormsModule],\n})\nexport class CountriesModule {}\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport {\n  addFavorite,\n  removeFavorite,\n} from 'src/app/core/state/countries/countries.actions';\nimport { Country } from 'src/app/core/state/countries/interfaces/country';\n\n@Component({\n  selector: 'app-qrvey-country-modal',\n  templateUrl: './qrvey-country-modal.component.html',\n  styleUrls: ['./qrvey-country-modal.component.scss'],\n})\nexport class QrveyCountryModalComponent implements OnInit {\n  @Input() open: boolean;\n  @Input() item: Country;\n  @Output() closeModal = new EventEmitter();\n  constructor(\n    private eRef: ElementRef,\n    private store: Store<{ countries: Country[] }>\n  ) {}\n\n  ngOnInit(): void {}\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    if (event.target.id === 'modal') {\n      this.closeModal.emit(null);\n    }\n  }\n\n  addFav(alpha2Code) {\n    this.store.dispatch(addFavorite({ idCountry: alpha2Code }));\n    this.closeModal.emit(null);\n  }\n  removeFav(alpha2Code) {\n    this.store.dispatch(removeFavorite({ idCountry: alpha2Code }));\n    this.closeModal.emit(null);\n  }\n}\n","<div class=\"container\">\n  <h2>\n    {{ item.name }}\n    <img\n      *ngIf=\"!item.favorite\"\n      class=\"star\"\n      src=\"assets/star.svg\"\n      (click)=\"addFav(item.alpha2Code)\"\n    />\n    <img\n      *ngIf=\"item.favorite\"\n      class=\"star\"\n      src=\"assets/star-fill.svg\"\n      (click)=\"removeFav(item.alpha2Code)\"\n    />\n  </h2>\n  <p><strong>Region: </strong>{{ item.region }}</p>\n  <p><strong>Population: </strong>{{ item.region }}</p>\n  <p><strong>Capital: </strong>{{ item.capital }}</p>\n  <p>\n    <strong>Currency: </strong>\n    <span *ngFor=\"let currency of item.currencies\">{{ currency.name }}, </span>\n  </p>\n  <p>\n    <strong>Language: </strong>\n    <span *ngFor=\"let language of item.languages\">{{ language.name }}, </span>\n  </p>\n  <p>\n    <strong>Border Countries: </strong>\n\n    <span *ngFor=\"let border of item.borders\">{{ border }}, </span>\n  </p>\n  <p><strong>Flag: </strong></p>\n  <img class=\"flag\" [src]=\"item.flag\" />\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { QrveyHomeComponent } from './core/qrvey-home/qrvey-home.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QrveyHomeComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CountriesRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren: () =>\n      import('./modules/countries/countries.module').then(\n        (m) => m.CountriesModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}